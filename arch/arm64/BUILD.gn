# Copyright 2016 The Fuchsia Authors
#
# Use of this source code is governed by a MIT-style
# license that can be found in the LICENSE file or at
# https://opensource.org/licenses/MIT

assert(target_cpu == "arm64")

import("//gnbuild/config.gni")
import("//gnbuild/generate_ld_script.gni")

module("arm64") {
  configs += [
    "//kernel/kernel:enable_vm",
    "//kernel/lib/magenta:enable_magenta",
  ]
  include_dirs = [
    "//kernel/lib/heap/include",
    "//kernel/lib/io/include",
    "//kernel/lib/libc/include",
    "//kernel/lib/magenta/include",
    "//kernel/lib/user_copy/include",
    "//system/ulib/magenta/include",
  ]

  # These defines would be ideally defined as a config, but they're currently
  # also shared by the ld script target and as such has to be defined as
  # variable.
  defines = kernel_defines
  sources = [
    "arch.c",
    "asm.S",
    "cache-ops.S",
    "exceptions.S",
    "exceptions_c.c",
    "fpu.c",
    "spinlock.S",
    "start.S",
    "thread.c",
    "user_copy.S",
    "user_copy_c.c",
    "uspace_entry.S",
  ]
  if (enable_vm) {
    sources += [ "mmu.c" ]
  }
  deps = [
    ":onesegment_ld",
  ]
  if (enable_smp) {
    include_dirs += [ "//kernel/dev/interrupt/include" ]
    sources += [ "mp.c" ]
    deps += [ "//kernel/dev/interrupt/arm_gic" ]
  }
}

generate_ld_script("onesegment_ld") {
  input = "system-onesegment.ld"
  output = "${root_gen_dir}/system-onesegment.ld"
  defines = kernel_defines
}
