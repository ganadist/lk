# Copyright 2016 The Fuchsia Authors
#
# Use of this source code is governed by a MIT-style
# license that can be found in the LICENSE file or at
# https://opensource.org/licenses/MIT

import("//gnbuild/config.gni")

config("enable_magenta") {
  if (enable_magenta) {
    defines = [ "WITH_LIB_MAGENTA=1" ]
  } else {
    defines = [ "WITH_LIB_MAGENTA=0" ]
  }
}

config("_magenta_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "include",
    "//system/ulib/magenta/include",
  ]
}

module("magenta") {
  public_configs = [ ":_magenta_config" ]
  configs += [ "//kernel/lib/userboot:enable_userboot" ]
  public = [
    "include/magenta/dispatcher.h",
    "include/magenta/event_dispatcher.h",
    "include/magenta/futex_context.h",
    "include/magenta/futex_node.h",
    "include/magenta/handle.h",
    "include/magenta/interrupt_dispatcher.h",
    "include/magenta/io_mapping_dispatcher.h",
    "include/magenta/log_dispatcher.h",
    "include/magenta/magenta.h",
    "include/magenta/msg_pipe_dispatcher.h",
    "include/magenta/msg_pipe.h",
    "include/magenta/process_owner_dispatcher.h",
    "include/magenta/thread_dispatcher.h",
    "include/magenta/user_copy.h",
    "include/magenta/user_process.h",
    "include/magenta/user_thread.h",
    "include/magenta/vm_object_dispatcher.h",
    "include/magenta/waiter.h",
  ]
  sources = [
    "event_dispatcher.cpp",
    "exception.cpp",
    "futex_context.cpp",
    "futex_node.cpp",
    "handle.cpp",
    "interrupt_dispatcher.cpp",
    "io_mapping_dispatcher.cpp",
    "log_dispatcher.cpp",
    "magenta.cpp",
    "msg_pipe.cpp",
    "msg_pipe_dispatcher.cpp",
    "process_owner_dispatcher.cpp",
    "thread_dispatcher.cpp",
    "user_copy.cpp",
    "user_process.cpp",
    "user_thread.cpp",
    "vm_object_dispatcher.cpp",
    "waiter.cpp",
  ]
  deps = [
    "//kernel/dev/interrupt",
    "//kernel/dev/udisplay",
    "//kernel/lib/console",
    "//kernel/lib/libc",
    "//kernel/lib/user_copy",
    "//kernel/lib/utils",
  ]
  if (enable_debuglog) {
    deps += [ "//kernel/lib/debuglog" ]
  }
  if (enable_pcie) {
    public += [
      "include/magenta/pci_device_dispatcher.h",
      "include/magenta/pci_interrupt_dispatcher.h",
      "include/magenta/pci_io_mapping_dispatcher.h",
    ]
    sources += [
      "pci_device_dispatcher.cpp",
      "pci_interrupt_dispatcher.cpp",
      "pci_io_mapping_dispatcher.cpp",
    ]
    deps += [ "//kernel/dev/pcie" ]
  }
}
