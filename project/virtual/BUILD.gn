# Copyright 2016 The Fuchsia Authors
#
# Use of this source code is governed by a MIT-style
# license that can be found in the LICENSE file or at
# https://opensource.org/licenses/MIT

import("//gnbuild/config.gni")
import("//gnbuild/compiled_action.gni")

group("test") {
  deps = [
    "//kernel/app/stringtests",
    "//kernel/app/tests",
    "//kernel/lib/debugcommands",
    "//kernel/lib/version",
  ]
}

group("user") {
  deps = [
    "//kernel/lib/syscalls",
    "//kernel/lib/userboot",
  ]
  if (enable_debuglog) {
    deps += [ "//kernel/lib/debuglog" ]
  }
}

template("mkbootfs") {
  runtime_deps_file = "$target_gen_dir/$target_name.runtime_deps"
  manifest_file = "$target_gen_dir/$target_name.manifest"

  group("${target_name}_write_deps") {
    visibility = [ ":*" ]
    forward_variables_from(invoker,
                           [
                             "data",
                             "data_deps",
                             "deps",
                             "public_deps",
                           ])
    write_runtime_deps = runtime_deps_file
  }

  action("${target_name}_generate_manifest") {
    visibility = [ ":*" ]
    script = "generate_manifest.sh"
    inputs = [
      runtime_deps_file,
    ]
    outputs = [
      manifest_file,
    ]
    args = [
      rebase_path(runtime_deps_file, root_build_dir),
      rebase_path(manifest_file, root_build_dir),
    ]
    deps = [
      ":${invoker.target_name}_write_deps",
    ]
  }

  compiled_action(target_name) {
    tool = "//system/tools:mkbootfs"

    inputs = [
      manifest_file,
    ]
    outputs = [
      "$root_gen_dir/user.bootfs",
    ]
    args = [
             "-o",
             rebase_path("$root_gen_dir/user.bootfs", root_build_dir),
           ] + rebase_path(inputs, root_build_dir)
    deps = [
      ":${target_name}_generate_manifest",
    ]
    # Ensure that the bootfs gets rebuilt if dependencies change
    if (defined(invoker.data_deps)) {
      deps += invoker.data_deps
    }
  }
}

mkbootfs("bootfs") {
  data_deps = [
    "//system/uapp/crasher",
    "//system/uapp/devmgr",
    "//system/uapp/dlog",
    "//system/uapp/i2c",
    "//system/uapp/mxsh",
    "//system/uapp/netsvc",
    "//system/uapp/strerror",
    "//system/uapp/userboot",
    "//system/utest/arch-registers",
    "//system/utest/bad-syscall",
    "//system/utest/cleanup",
    "//system/utest/dump1",
    "//system/utest/echo",
    "//system/utest/errno",
    "//system/utest/events",
    "//system/utest/evil",
    "//system/utest/exceptions",
    "//system/utest/fpu",
    "//system/utest/futex",
    "//system/utest/handle-info",
    "//system/utest/handle-transfer",
    "//system/utest/message-pipe",
    "//system/utest/mxr-mutex",
    "//system/utest/mxr-thread",
    "//system/utest/mxr-tls",
    "//system/utest/process",
    "//system/utest/pthread",
    "//system/utest/reply-handle",
    "//system/utest/remoteio",
    "//system/utest/thread-initial-state",
    "//system/utest/thread-local-storage",
    "//system/utest/threads",
    "//system/utest/vmo",
  ]
}
